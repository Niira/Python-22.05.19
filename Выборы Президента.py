# Курс основы программирования на Python
# Задание по программированию: Выборы Президента
# 22.05.2019
#
# В выборах Президента Российской Федерации побеждает
# кандидат, набравший свыше половины числа голосов избирателей.
# Если такого кандидата нет, то во второй тур выборов выходят
# два кандидата, набравших наибольшее число голосов.
#
# Формат ввода
#
# Каждая строка входного файла содержит имя кандидата, за которого
# отдал голос один избиратель. Известно, что общее число кандидатов
# не превосходит 20, но в отличии от предыдущих задач список кандидатов
# явно не задан. Читайте данные из файла input.txt с указанием кодировки utf8.
#
# Формат вывода
#
# Если есть кандидат, набравший более 50% голосов, программа должна вывести
# его имя. Если такого кандидата нет, программа должна вывести имя кандидата,
# занявшего первое место, затем имя кандидата, занявшего второе место. Выводите
# данные в файл output.txt с указанием кодировки utf8.
#
# inFile - файл с исходными значениями
# onFile - файл с результатами
# presCountDict - словарь содержащий количество голосов
# commNum - сумма голосов
# presVoteList - список посчитанных голосов
# percent - процент голосов
#


def sort_list_vote(a):
    """Сортировка по количеству голосов"""
    return a[1]


inFile = open('input.txt', 'r', encoding='utf8')
onFile = open('output.txt', 'w', encoding='utf8')
presCountDict = {}
presVoteList = []
commNum = 0

for word in inFile:  # Цикл по файлу для формирования словаря
    presCountDict[word.rstrip()] = presCountDict.get(word.rstrip(), 0) + 1
    commNum += 1

for now in presCountDict:  # Цикл по словарю для формирования списка
    percent = int((presCountDict[now] / commNum) * 100)
    presVoteList.append((now, presCountDict[now], percent))

presVoteList.sort(key=sort_list_vote, reverse=True)

if presVoteList[0][2] > 50:  # Проверка процента голосов кандидата
    # набравшего наибольшее количество голосов
    print(presVoteList[0][0], file=onFile)
else:
    print(presVoteList[0][0], file=onFile)
    print(presVoteList[1][0], file=onFile)

inFile.close()
onFile.close()
